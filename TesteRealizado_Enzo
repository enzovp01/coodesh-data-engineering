# *****1. Extração de Dados *****

import sqlite3
import pandas as pd

# Conectando ao banco de dados SQLite
conexao = sqlite3.connect('dados_vendas.db')
cursor = conexao.cursor()

# Criando uma tabela e inserindo dados de exemplo
cursor.execute('''
    CREATE TABLE IF NOT EXISTS vendas (
        id INTEGER PRIMARY KEY,
        data_venda DATE,
        id_produto INTEGER,
        id_cliente INTEGER,
        quantidade INTEGER,
        valor_unitario DECIMAL(10,2),
        valor_total DECIMAL(10,2),
        id_vendedor INTEGER,
        regiao VARCHAR(50)
    )
''')

# Inserindo dados fictícios 
cursor.executemany(
    '''INSERT INTO vendas (id, data_venda, id_produto, id_cliente, quantidade, valor_unitario, valor_total, id_vendedor, regiao) 
       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)''', [
        (1, '2023-01-15', 101, 1001, 2, 50.00, 100.00, 5, 'Sul'),
        (2, '2023-01-16', 102, 1002, 1, 75.50, 75.50, 6, 'Sudeste'),
        # ... Outros registros
    ]
)
conexao.commit()

# Extraindo dados para um DataFrame
df_vendas = pd.read_sql_query("SELECT * FROM vendas", conexao)
conexao.close()

# ***** 2. Transformação*****

# Convertendo data_venda para o formato ISO (YYYY-MM-DD)
df_vendas['data_venda'] = pd.to_datetime(df_vendas['data_venda']).dt.strftime('%Y-%m-%d')

# Calculando total de vendas por dia
df_vendas_diarias = df_vendas.groupby('data_venda').agg({'valor_total': 'sum'}).reset_index()

# Removendo duplicatas, caso houver
df_vendas = df_vendas.drop_duplicates()

# ***** 3. Carregamento *****

import os

# Definindo o caminho base
path_base = 'data_lake/s3_bucket/'

# Salvando os dados em partições de ano/mês/dia
for _, row in df_vendas_diarias.iterrows():
    ano, mes, dia = row['data_venda'].split('-')
    diretorio = os.path.join(path_base, ano, mes, dia)
    os.makedirs(diretorio, exist_ok=True)
    arquivo_caminho = os.path.join(diretorio, f'vendas_{ano}{mes}{dia}.csv')
    
    # Salvando o dataframe diário em CSV
    row.to_frame().T.to_csv(arquivo_caminho, index=False)


# ***** 4. Carregamento *****

SELECT 
    year(data_venda) AS ano, 
    month(data_venda) AS mes, 
    SUM(valor_total) AS total_vendas
FROM vendas
GROUP BY ano, mes
ORDER BY ano, mes;
